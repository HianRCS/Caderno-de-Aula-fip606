---
title: "Corgraph e Gráficos"
format: html
editor: visual
warning: false
mensage: false
---

## Dados de Imagens corgraph

O pacote corgraph no RStudio oferece ferramentas para visualizar e analisar redes complexas. Essas redes podem representar diversas relações entre entidades, como interações entre proteínas, relações sociais em uma comunidade ou conexões entre diferentes sites na internet. O corgraph permite criar diversos tipos de gráficos de rede, como grafos lineares, grafos circulares e grafos em 3D, além de fornecer funções para calcular métricas de rede e realizar análises de rede.

```{r}

library(tidyverse)
library(gsheet)
library(ggplot2)
library(ggthemes)
library(AgroR)
library(corrplot)
library(drc)
library(ec50estimator)
library(dplyr)
library(dbplyr)



imgs <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992")

imgs |>
  pivot_longer(3:5, names_to = "method",
               values_to = "value") |>
  ggplot(aes(method, value))+
  geom_boxplot()+
  geom_point(color = "red")

imgs |>
  ggplot(aes(Assess, ImageJ))+
  geom_point()+
  geom_smooth()

imgs |>
  ggplot(aes(Assess, LeafDoctor))+
  geom_point()+
  geom_smooth()


imgs2 <- imgs |>
  dplyr::select(3:5)


corgraph(imgs2)

cor.test(imgs$Assess, imgs$LeafDoctor)
cor(imgs$Assess, imgs$LeafDoctor)

cor_imgs2 <- cor(imgs2)
corrplot(cor_imgs2, method = "number", type = "lower", diag = FALSE)



```

## dados campo

```{r}

campo <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711")

campo2 <- campo |>
  dplyr::select(DFC, FER, PROD)
corgraph(campo2)

campo |>
  ggplot(aes(DFC, PROD))+
  geom_point()


```

## dados do estande

```{r}

estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")

estande |>
  ggplot(aes(trat, nplants))+
  geom_jitter(width = 0.1, alpha = 0.5, color = "red") +
  facet_wrap(~ exp) +
  stat_summary(fun.data = "mean_cl_boot", color = "black") +
  geom_smooth(method = lm, se = F, color = "orange")
  
exp2 <- estande |>
  filter(exp == 2)


exp2 |>
  ggplot(aes(trat, nplants))+
  geom_point()+
  ylim(0,100)+
  geom_smooth(method = "lm",
              se = F,
              formula = y ~poly(x,2),
              color = "black")+
  geom_smooth(method = "lm",
                se = FALSE)

lm2 <- lm(nplants ~ trat,
          data = exp2)
summary(lm2)

exp2$nplants2 <- exp2$nplants
lm2 <- lm(nplants ~trat,
          data = exp2)


exp2$trat2 <- exp2$trat^2
lm2 <- lm(nplants ~ trat,
          data = exp2)

lm3  <- lm(nplants ~ trat + trat2, 
           data = exp2)

summary(lm2)
summary(lm3)
AIC(lm2)
AIC(lm3)
hist(residuals(lm2))

with(exp2, polynomial(trat, nplants, grau = 2))




```

## dados de sensibilidade de fungicida

```{r}

pyra <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")

pyra |>
  group_by(code, dose) |>
  summarise(mean_germination = mean(germination)) |>
  ggplot(aes(dose, mean_germination))+
  geom_jitter()+
  facet_wrap(~code)

pyra2 <- pyra |>
  group_by(code, dose) |>
  summarise(mean_germination = mean(germination))


isolado165 <- pyra2 |>
  filter(code == "165")

drc1 <- drm(mean_germination ~dose, data = isolado165,
            fct = LL.3())

df_ec50 <- estimate_EC50(mean_germination ~ dose, 
                         data = pyra2,
                         isolate_col = "code",
                         interval = "delta",
                         fct = drc:: LL.3())
df_ec50 |>
  ggplot(aes(reorder(ID, Estimate), Estimate))+
  geom_point()+
  geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.1)+
  coord_flip()


AIC(drc1)
plot(drc1)
ED(drc1, 50, interval = "delta")

```
